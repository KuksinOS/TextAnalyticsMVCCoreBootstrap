@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<!-- Stack the columns on mobile by making one full-width and the other half-width -->
<div class="row">
    <div class="col-12 col-md-4">
        <div class="main container rounded p-3">
            <h4 class="card-title">Метрики</h4>
            <form class="form-group mb-5" onsubmit="AddMetric(this, event);return false;">
                <div class="add-items  d-flex">
                    <input type="text" id="metric" class="form-control" placeholder="Определите метрику">
                    <button class="add btn btn-primary font-weight-bold">Добавить</button>
                </div>
            </form>


            <div class="cards">

            </div>

        </div>

    </div>
    <div class="col-12 col-md-8">

        <nav class="navbar navbar-expand-sm bg-primary navbar-dark">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item" style="margin:10px;">
                    <input name="uploadedFile" type="file" id="uploadedFile" class="form-control" style="height:unset;" value="">
                </li>
                <li class="nav-item" style="margin:10px;">
                    <div class="alert alert-dark" role="alert">
                        <p id="demo">Имя файла:<br>Размер файла: bytes <br></p>
                    </div>
                </li>
                <li class="nav-item">
                    <form asp-action="AddFile" asp-controller="Home" method="post" enctype="multipart/form-data">
                        <input name="uploadedFile1" type="file" id="uploadedFile1" value="" visbility="hidden" style="display:none">
                        <input type="submit" value="Загрузить на сервер" />
                    </form>
                </li>
            </ul>
        </nav>

        <h5>Загруженный текст</h5>

        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">Текст</span>
            </div>
            <textarea id="infotext" class="form-control" rows="10" aria-label="Текст"></textarea>
        </div>

    </div>
    <button type="submit" class="btn btn-info">Submit Information</button>

</div>








@section scripts {


    <script>

        $(document).ready(function () {
            //   alert('a');
        });

        // Remove the default cards if cards are present in the localStorage object
        if (localStorage.cards) {
            $('.cards').children().remove();
            $('.cards').append(JSON.parse(localStorage.getItem('cards')));
        }

        // Delete the existing cards and add the new cards
        // Simpler than pushing/splicing an array
        const setStorage = () => {
            localStorage.removeItem('cards');
            localStorage.setItem('cards', JSON.stringify($('.cards').html()));
        };

        // Delete the selected card and update localStorage
        $('.cards').on('click', '#delete', () => {
            debugger
            $(event.target).offsetParent().remove();
            setStorage();
        });

        // Append new card on submit and update localStorage
        function AddMetric(form, event) {
            event.preventDefault();
            const metric = form.elements["metric"].value;

            if (metric) {
                const card = `
                <div class="card">
                  <div class="card-block">
                    <button id="delete" type="button" class="btn btn-link float-right">❌</button>
                    <p class="card-title lead">${metric}</p>
                  </div>
                </div>
              `;
                $('.cards').append(card);
                // Reset the form input field
                $('form').trigger('reset');
                setStorage();
            }
        };


        function readTextFile(file, callback, encoding) {
            var reader = new FileReader();
            reader.addEventListener('load', function (e) {
                callback(this.result);
            });
            if (encoding) reader.readAsText(file, encoding);
            else reader.readAsText(file);
        }

        function fileChosen(input, output) {
            if (input.files && input.files[0]) {
                let txt = "";

                 if ('name' in input.files[0]) {
                 txt += "Имя файла: " + input.files[0].name + "<br>";
                 }

                 if ('size' in input.files[0]) {
                 txt += "Размер файла: " + input.files[0].size + " bytes <br>";
                 }
                document.getElementById("demo").innerHTML = txt;

                readTextFile(
                    input.files[0],
                    function (str) {
                        output.value = str;
                    }
                );
            }
        }

        $('#uploadedFile').on('change', function () {
            debugger
            let uploadedFile1 = document.getElementById('uploadedFile1');
            uploadedFile1.files = this.files;

            fileChosen(this, document.getElementById('infotext'));
        });



    </script>
}





